{
	"info": {
		"_postman_id": "e8e808b9-7bea-456a-8e93-621d9fda742f",
		"name": "Store Webapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15170462"
	},
	"item": [
		{
			"name": "Get Empty Store SKU",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404-Not Found\", function () { pm.response.to.have.status(404); });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"pm.globals.set(\"storeSKU\", uuid.v4());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add SKU with initial inventory count",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201-Created\", function () { pm.response.to.have.status(201); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionId\" : \"tx123\",\n    \"amount\" : 1000\n}"
				},
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}/stock",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}",
						"stock"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Store SKU after initial inventory count",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.transactionId).to.eql(\"tx123\");",
							"    pm.expect(jsonData.version).to.eql(1);",
							"    pm.expect(jsonData.amount).to.eql(1000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate inventory store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202-Accepted\", function () { pm.response.to.have.status(202); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.transactionId).to.eql(\"tx123\");",
							"    pm.expect(jsonData.version).to.eql(1);",
							"    pm.expect(jsonData.amount).to.eql(1000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionId\" : \"tx123\",\n    \"amount\" : 1000\n}"
				},
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}/stock",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}",
						"stock"
					]
				}
			},
			"response": []
		},
		{
			"name": "Purchase item with more than inventory count",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400-Client Error\", function () { pm.response.to.have.status(400); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionId\" : \"tx120\",\n    \"amount\" : 2000\n}"
				},
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}/purchase",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}",
						"purchase"
					]
				}
			},
			"response": []
		},
		{
			"name": "Purchase item with less than inventory balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201-Created\", function () { pm.response.to.have.status(201); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionId\" : \"tx124\",\n    \"amount\" : 456\n}"
				},
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}/purchase",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}",
						"purchase"
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202-Accepted\", function () { pm.response.to.have.status(202); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.transactionId).to.eql(\"tx124\");",
							"    pm.expect(jsonData.version).to.eql(2);",
							"    pm.expect(jsonData.coins).to.eql(544);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionId\" : \"tx124\",\n    \"coins\" : 456\n}"
				},
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}/purchase",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}",
						"purchase"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Store SKU",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.transactionId).to.eql(\"tx124\");",
							"    pm.expect(jsonData.version).to.eql(2);",
							"    pm.expect(jsonData.amount).to.eql(544);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/store/{{storeSKU}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"store",
						"{{storeSKU}}"
					]
				}
			},
			"response": []
		}
	]
}